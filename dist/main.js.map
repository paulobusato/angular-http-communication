{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-book/add-book.component.html","webpack:///./src/app/add-book/add-book.component.ts","webpack:///./src/app/add-reader/add-reader.component.html","webpack:///./src/app/add-reader/add-reader.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/book-tracker-error-handler.service.ts","webpack:///./src/app/core/books-resolver.service.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/data.service.ts","webpack:///./src/app/core/logger.service.ts","webpack:///./src/app/core/module-import-guard.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/data.ts","webpack:///./src/app/edit-book/edit-book.component.html","webpack:///./src/app/edit-book/edit-book.component.ts","webpack:///./src/app/edit-reader/edit-reader.component.html","webpack:///./src/app/edit-reader/edit-reader.component.ts","webpack:///./src/app/models/bookTrackerError.ts","webpack:///./src/app/services/badge.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add New Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Book } from 'app/models/book';\nimport { DataService } from 'app/core/data.service';\n\n@Component({\n  selector: 'app-add-book',\n  templateUrl: './add-book.component.html',\n  styles: []\n})\nexport class AddBookComponent implements OnInit {\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() { }\n\n  saveBook(formValues: any): void {\n    const newBook: Book = <Book>formValues;\n    newBook.bookID = 0;\n    console.log(newBook);\n\n    this.dataService.addBook(newBook).subscribe(console.log, console.log);\n  }\n\n}\n","module.exports = \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Add Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Reader } from \"app/models/reader\";\n\n@Component({\n  selector: 'app-add-reader',\n  templateUrl: './add-reader.component.html',\n  styles: []\n})\nexport class AddReaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  saveReader(formValues: any): void {\n    let newReader: Reader = <Reader>formValues;\n    newReader.readerID = 0;\n    console.log(newReader);\n    console.warn('Save new reader not yet implemented.');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddBookComponent } from 'app/add-book/add-book.component';\nimport { AddReaderComponent } from 'app/add-reader/add-reader.component';\nimport { DashboardComponent } from 'app/dashboard/dashboard.component';\nimport { EditBookComponent } from 'app/edit-book/edit-book.component';\nimport { EditReaderComponent } from 'app/edit-reader/edit-reader.component';\nimport { BooksResolverService } from './core/books-resolver.service';\n\nconst routes: Routes = [\n  { path: 'dashboard', component: DashboardComponent, resolve: { resolvedBooks: BooksResolverService } },\n  { path: 'addbook', component: AddBookComponent },\n  { path: 'addreader', component: AddReaderComponent },\n  { path: 'editreader/:id', component: EditReaderComponent },\n  { path: 'editbook/:id', component: EditBookComponent },\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n        <!-- Brand and toggle get grouped for better mobile display -->\\n        <div class=\\\"navbar-header\\\">\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n                <span class=\\\"icon-bar\\\"></span>\\n            </button>\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\n        </div>\\n\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\n            </ul>\\n        </div><!-- /.navbar-collapse -->\\n    </div><!-- /.container-fluid -->\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AddBookComponent } from './add-book/add-book.component';\nimport { AddReaderComponent } from './add-reader/add-reader.component';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { EditBookComponent } from './edit-book/edit-book.component';\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    AddBookComponent,\n    EditReaderComponent,\n    EditBookComponent,\n    AddReaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    CoreModule,\n    HttpClientModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Injectable()\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\n\n  handleError(error: any): void {\n    let customError: BookTrackerError = new BookTrackerError();\n    customError.errorNumber = 200;\n    customError.message = (<Error>error).message;\n    customError.friendlyMessage = 'An error occurred. Please try again.';\n\n    console.log(customError);\n  }\n\n  constructor() { }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nimport { BookTrackerError } from '../models/bookTrackerError';\nimport { Book } from '../models/book';\nimport { DataService } from '../core/data.service'\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class BooksResolverService implements Resolve<Book[] | BookTrackerError> {\n\n  constructor(private dataService: DataService) { }\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n    ): Observable<Book[] | BookTrackerError> | Promise<Book[] | BookTrackerError> | Book[] | BookTrackerError {\n    return this.dataService.getAllBooks().pipe(\n      catchError(err => of(err))\n    );\n  }\n}\n","import { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoggerService } from './logger.service';\nimport { DataService } from './data.service';\nimport { PlainLoggerService } from \"./plain-logger.service\";\nimport { throwIfAlreadyLoaded } from \"app/core/module-import-guard\";\nimport { BookTrackerErrorHandlerService } from './book-tracker-error-handler.service';\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [],\n  providers: [\n    LoggerService, \n    DataService, \n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService }\n  ]\n})\nexport class CoreModule {\n\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n  \n }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map, tap, catchError } from 'rxjs/operators';\n\nimport { allBooks, allReaders } from 'app/data';\nimport { Reader } from 'app/models/reader';\nimport { Book } from 'app/models/book';\nimport { OldBook } from 'app/models/oldBook';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Injectable()\nexport class DataService {\n\n  mostPopularBook: Book = allBooks[0];\n\n  constructor(private http: HttpClient) { }\n\n  setMostPopularBook(popularBook: Book): void {\n    this.mostPopularBook = popularBook;\n  }\n\n  getAllReaders(): Reader[] {\n    return allReaders;\n  }\n\n  getReaderById(id: number): Reader {\n    return allReaders.find(reader => reader.readerID === id);\n  }\n\n  getAllBooks(): Observable<Book[] | BookTrackerError> {\n    console.log('Getting all books from the server.');\n    return this.http.get<Book[]>('/api/books').pipe(\n      catchError(err => this.handleHttpError(err))\n    );\n  }\n\n  private handleHttpError(err: HttpErrorResponse): Observable<BookTrackerError> {\n     const dataError = new BookTrackerError();\n     dataError.errorNumber = 100;\n     dataError.message = err.statusText;\n     dataError.friendlyMessage = 'An error occured retrieving data.';\n     return throwError(dataError);\n  }\n\n  getBookById(id: number): Observable<Book> {\n    return this.http.get<Book>(`/api/books/${id}`, {\n      headers: new HttpHeaders({\n        'Accept': 'application/json',\n        'Authorization': 'my-token'\n      })\n    });\n  }\n\n  getOldBookById(id: number): Observable<OldBook> {\n    return this.http.get<Book>(`/api/books/${id}`).pipe(\n      map(b => <OldBook>{\n        bookTitle: b.title,\n        year: b.publicationYear}\n      ),\n      tap(classicBook => console.log(classicBook))\n    );\n  }\n\n  addBook(newBook: Book): Observable<Book> {\n    return this.http.post<Book>('/api/books', newBook, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n  updateBook(updatedBook: Book): Observable<void> {\n    return this.http.put<void>(`/api/books/${updatedBook.bookID}`, updatedBook, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    });\n  }\n\n  deleteBook(bookID: number): Observable<void> {\n    return this.http.delete<void>(`/api/books/${bookID}`);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LoggerService {\n  log(message: string): void {\n    const timeString: String = new Date().toLocaleTimeString();\n    console.log(`${message} (${timeString})`);\n  }\n\n  error(message: string): void {\n    console.error(`ERROR: ${message}`);\n  }\n}","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let book of allBooks'>\\n          <i>{{book.title}}</i>\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n        <li *ngFor='let reader of allReaders'>\\n          {{reader.name}}\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\n        </li>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-lg-4\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Title } from '@angular/platform-browser';\n\nimport { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\nimport { DataService } from 'app/core/data.service';\nimport { BookTrackerError } from 'app/models/bookTrackerError';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styles: []\n})\nexport class DashboardComponent implements OnInit {\n\n  allBooks: Book[];\n  allReaders: Reader[];\n  mostPopularBook: Book;\n\n  constructor(private dataService: DataService,\n              private title: Title) { }\n\n  ngOnInit() {\n    this.dataService.getAllBooks().subscribe(\n      (data: Book[]) => this.allBooks = data,\n      (err: BookTrackerError) => console.log(err.friendlyMessage),\n      () => console.log('All done getting books.')\n    );\n\n    this.allReaders = this.dataService.getAllReaders();\n    this.mostPopularBook = this.dataService.mostPopularBook;\n\n    this.title.setTitle(`Book Tracker`);\n  }\n\n  deleteBook(bookID: number): void {\n    this.dataService.deleteBook(bookID).subscribe(\n      () => {\n        const index = this.allBooks.findIndex(book => book.bookID === bookID);\n        this.allBooks.splice(index, 1);\n      },\n      console.log\n    );\n  }\n\n  deleteReader(readerID: number): void {\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\n  }\n\n}\n","import { Book } from \"app/models/book\";\nimport { Reader } from \"app/models/reader\";\n\nexport const allReaders: Reader[] = [\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\n  ];\n\nexport const allBooks: Book[] = [\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926 },\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\n];","module.exports = \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Book</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Book } from 'app/models/book';\nimport { DataService } from 'app/core/data.service';\nimport { OldBook } from 'app/models/oldBook';\n\n@Component({\n  selector: 'app-edit-book',\n  templateUrl: './edit-book.component.html',\n  styles: []\n})\nexport class EditBookComponent implements OnInit {\n\n  selectedBook: Book;\n\n  constructor(private route: ActivatedRoute,\n              private dataService: DataService) { }\n\n  ngOnInit() {\n    const bookID: number = +this.route.snapshot.params['id'];\n    this.dataService.getBookById(bookID).subscribe(\n      (data: Book) => this.selectedBook = data,\n      (err: any) => console.log(err)\n    );\n\n    this.dataService.getOldBookById(bookID).subscribe(\n      (data: OldBook) => console.log(`Old book title: ${data.bookTitle}`)\n    );\n  }\n\n  setMostPopular(): void {\n    this.dataService.setMostPopularBook(this.selectedBook);\n  }\n\n  saveChanges(): void {\n    this.dataService.updateBook(this.selectedBook).subscribe(\n      () => console.log(`${this.selectedBook.title} updates successfully`),\n      console.log\n    );\n  }\n}\n","module.exports = \"<div class=\\\"col-lg-5\\\">\\n  <div class=\\\"well bs-component\\\">\\n    <form class=\\\"form-horizontal\\\">\\n      <fieldset>\\n        <legend>Edit Reader</legend>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\n          <div class=\\\"col-lg-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\n          <div class=\\\"col-lg-8\\\">\\n            {{ currentBadge }}\\n          </div>\\n        </div>\\n\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\n          </div>\\n        </div>\\n      </fieldset>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Reader } from \"app/models/reader\";\nimport { DataService } from 'app/core/data.service';\nimport { BadgeService } from 'app/services/badge.service';\n\n@Component({\n  selector: 'app-edit-reader',\n  templateUrl: './edit-reader.component.html',\n  styles: [],\n  providers: [BadgeService]\n})\nexport class EditReaderComponent implements OnInit {\n\n  selectedReader: Reader;\n  currentBadge: string;\n\n  constructor(private route: ActivatedRoute,\n              private dataService: DataService,\n              private badgeService: BadgeService) { }\n\n  ngOnInit() {\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\n    this.selectedReader = this.dataService.getReaderById(readerID);\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\n  }\n\n  saveChanges() {\n    console.warn('Save reader not yet implemented.');\n  }\n}\n","export class BookTrackerError {\n  errorNumber: number;\n  message: string;\n  friendlyMessage: string;\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BadgeService {\n\n  constructor() { }\n\n  getReaderBadge(minutesRead: number): string {\n\n    if (minutesRead > 5000) {\n      return 'Book Worm';\n    }\n    else if (minutesRead > 2500) {\n      return 'Page Turner';\n    }\n    else {\n      return 'Getting Started';\n    }\n    \n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}